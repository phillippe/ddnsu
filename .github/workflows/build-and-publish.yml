name: Build and Publish

on:
  push:
    tags: [ "release-*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python -m pip install --upgrade pip build
      - name: Build packages
        run: python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: dist/
          retention-days: 7

  publish-pypi:
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ddnsu
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450

  publish-github:
    needs: [ publish-pypi ]  # Publish to GitHub only if publishing to PyPI is successful
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist/
      - name: Sign with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create "${{ github.ref_name }}" --repo "${{ github.repository }}" --notes ""
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload "${{ github.ref_name }}" dist/** --repo "${{ github.repository }}"
